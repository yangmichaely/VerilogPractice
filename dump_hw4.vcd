$date
	Fri Apr 12 20:41:56 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module hw4_tb $end
$var wire 3 ! out [2:0] $end
$var reg 3 " a [2:0] $end
$var reg 3 # b [2:0] $end
$var reg 3 $ c [2:0] $end
$var reg 1 % clk $end
$var reg 3 & expected [2:0] $end
$scope module my_max $end
$var wire 3 ' a [2:0] $end
$var wire 3 ( b [2:0] $end
$var wire 3 ) c [2:0] $end
$var wire 3 * max [2:0] $end
$var wire 3 + maxVal [2:0] $end
$var reg 3 , ans [2:0] $end
$upscope $end
$scope begin $unm_blk_4 $end
$var integer 32 - expected_file [31:0] $end
$var integer 32 . out_file [31:0] $end
$upscope $end
$scope begin $unm_blk_5 $end
$var integer 32 / expected_file [31:0] $end
$var integer 32 0 out_file [31:0] $end
$upscope $end
$upscope $end
$scope module hw6q1_tb $end
$var wire 32 1 remainder [31:0] $end
$var wire 32 2 quotient [31:0] $end
$var reg 1 3 clk $end
$var reg 9 4 cycle_counter [8:0] $end
$var reg 32 5 denominator [31:0] $end
$var reg 32 6 expected_quotient [31:0] $end
$var reg 32 7 expected_remainder [31:0] $end
$var reg 32 8 numerator [31:0] $end
$scope module my_divider $end
$var wire 1 3 clk $end
$var wire 32 9 dividend [31:0] $end
$var wire 32 : divisor [31:0] $end
$var wire 32 ; quotient [31:0] $end
$var wire 32 < remainder [31:0] $end
$var reg 32 = i [31:0] $end
$var reg 32 > q [31:0] $end
$var reg 2 ? state [1:0] $end
$var reg 32 @ temp_dividend [31:0] $end
$upscope $end
$scope begin $unm_blk_12 $end
$var integer 32 A debug_file [31:0] $end
$var integer 32 B expected_file [31:0] $end
$var integer 32 C out_file [31:0] $end
$upscope $end
$upscope $end
$scope module hw6q2_tb $end
$var wire 1 D ready $end
$var wire 1 E overflow $end
$var wire 32 F fact [31:0] $end
$var reg 1 G clk $end
$var reg 9 H cycle_counter [8:0] $end
$var reg 32 I expected_fact [31:0] $end
$var reg 1 J expected_overflow $end
$var reg 32 K val [31:0] $end
$scope module my_fact $end
$var wire 1 G clk $end
$var wire 32 L factorial [31:0] $end
$var wire 1 E overflow $end
$var wire 1 D ready $end
$var wire 32 M val [31:0] $end
$var reg 32 N ans [31:0] $end
$var reg 32 O counter [31:0] $end
$var reg 2 P nextState [1:0] $end
$var reg 1 Q overflowBit $end
$var reg 1 R readyBit $end
$var reg 2 S state [1:0] $end
$var reg 32 T temp [31:0] $end
$upscope $end
$scope begin $unm_blk_19 $end
$var integer 32 U expected_file [31:0] $end
$var integer 32 V out_file [31:0] $end
$upscope $end
$scope begin $unm_blk_20 $end
$var integer 32 W debug_file [31:0] $end
$var integer 32 X expected_file [31:0] $end
$var integer 32 Y out_file [31:0] $end
$upscope $end
$upscope $end
$scope module hw6q3tb $end
$var wire 1 Z ready $end
$var wire 1 [ overflow $end
$var wire 32 \ avg [31:0] $end
$var reg 1 ] clk $end
$var reg 9 ^ cycle_counter [8:0] $end
$var reg 32 _ expected_avg [31:0] $end
$var reg 1 ` expected_overflow $end
$var reg 32 a in [31:0] $end
$var reg 32 b input_1 [31:0] $end
$var reg 32 c input_2 [31:0] $end
$var reg 32 d input_3 [31:0] $end
$var reg 32 e input_4 [31:0] $end
$var reg 32 f input_5 [31:0] $end
$var reg 32 g input_6 [31:0] $end
$scope module my_avg $end
$var wire 1 ] clk $end
$var wire 32 h in [31:0] $end
$var wire 1 [ overflow $end
$var wire 1 Z ready $end
$var wire 32 i avg [31:0] $end
$var reg 32 j ans [31:0] $end
$var reg 32 k counter [31:0] $end
$var reg 1 l overflowBit $end
$var reg 1 m readyBit $end
$var reg 1 n state $end
$var reg 32 o temp [31:0] $end
$upscope $end
$scope begin $unm_blk_27 $end
$var integer 32 p expected_file [31:0] $end
$var integer 32 q out_file [31:0] $end
$upscope $end
$scope begin $unm_blk_28 $end
$var integer 32 r debug_file [31:0] $end
$var integer 32 s expected_file [31:0] $end
$var integer 32 t out_file [31:0] $end
$upscope $end
$upscope $end
$scope module hw6q4tb $end
$var wire 32 u running_sum [31:0] $end
$var reg 1 v clk $end
$var reg 32 w expected_sum [31:0] $end
$var reg 32 x stream_1 [31:0] $end
$var reg 32 y stream_2 [31:0] $end
$scope module my_stream $end
$var wire 1 v clk $end
$var wire 32 z first_stream [31:0] $end
$var wire 32 { running_sum [31:0] $end
$var wire 32 | second_stream [31:0] $end
$var reg 32 } sum [31:0] $end
$upscope $end
$scope begin $unm_blk_35 $end
$var integer 32 ~ expected_file [31:0] $end
$var integer 32 !" out_file [31:0] $end
$upscope $end
$scope begin $unm_blk_36 $end
$var integer 32 "" debug_file [31:0] $end
$var integer 32 #" expected_file [31:0] $end
$var integer 32 $" out_file [31:0] $end
$upscope $end
$upscope $end
$scope module queue $end
$var wire 1 %" clk $end
$var wire 32 &" in [31:0] $end
$var wire 32 '" out [31:0] $end
$var wire 1 (" queue_empty $end
$var wire 1 )" queue_full $end
$var wire 1 *" signal $end
$var reg 32 +" deqOut [31:0] $end
$var reg 1 ," empty $end
$var reg 1 -" full $end
$var integer 32 ." size [31:0] $end
$scope begin $ivl_for_loop0 $end
$var integer 32 /" i [31:0] $end
$upscope $end
$upscope $end
$scope module hw4_tb $end
$scope module my_max $end
$upscope $end
$scope begin $unm_blk_4 $end
$upscope $end
$scope begin $unm_blk_5 $end
$upscope $end
$upscope $end
$scope module hw6q1_tb $end
$scope module my_divider $end
$upscope $end
$scope begin $unm_blk_12 $end
$upscope $end
$upscope $end
$scope module hw6q2_tb $end
$scope module my_fact $end
$upscope $end
$scope begin $unm_blk_19 $end
$upscope $end
$scope begin $unm_blk_20 $end
$upscope $end
$upscope $end
$scope module hw6q3tb $end
$scope module my_avg $end
$upscope $end
$scope begin $unm_blk_27 $end
$upscope $end
$scope begin $unm_blk_28 $end
$upscope $end
$upscope $end
$scope module hw6q4tb $end
$scope module my_stream $end
$upscope $end
$scope begin $unm_blk_35 $end
$upscope $end
$scope begin $unm_blk_36 $end
$upscope $end
$upscope $end
$scope module queue $end
$scope begin $ivl_for_loop0 $end
$upscope $end
$upscope $end
$scope module hw4_tb $end
$scope module my_max $end
$upscope $end
$scope begin $unm_blk_4 $end
$upscope $end
$scope begin $unm_blk_5 $end
$upscope $end
$upscope $end
$scope module hw6q1_tb $end
$scope module my_divider $end
$upscope $end
$scope begin $unm_blk_12 $end
$upscope $end
$upscope $end
$scope module hw6q2_tb $end
$scope module my_fact $end
$upscope $end
$scope begin $unm_blk_19 $end
$upscope $end
$scope begin $unm_blk_20 $end
$upscope $end
$upscope $end
$scope module hw6q3tb $end
$scope module my_avg $end
$upscope $end
$scope begin $unm_blk_27 $end
$upscope $end
$scope begin $unm_blk_28 $end
$upscope $end
$upscope $end
$scope module hw6q4tb $end
$scope module my_stream $end
$upscope $end
$scope begin $unm_blk_35 $end
$upscope $end
$scope begin $unm_blk_36 $end
$upscope $end
$upscope $end
$scope module queue $end
$scope begin $ivl_for_loop0 $end
$upscope $end
$upscope $end
$scope module hw4_tb $end
$scope module my_max $end
$upscope $end
$scope begin $unm_blk_4 $end
$upscope $end
$scope begin $unm_blk_5 $end
$upscope $end
$upscope $end
$scope module hw6q1_tb $end
$scope module my_divider $end
$upscope $end
$scope begin $unm_blk_12 $end
$upscope $end
$upscope $end
$scope module hw6q2_tb $end
$scope module my_fact $end
$upscope $end
$scope begin $unm_blk_19 $end
$upscope $end
$scope begin $unm_blk_20 $end
$upscope $end
$upscope $end
$scope module hw6q3tb $end
$scope module my_avg $end
$upscope $end
$scope begin $unm_blk_27 $end
$upscope $end
$scope begin $unm_blk_28 $end
$upscope $end
$upscope $end
$scope module hw6q4tb $end
$scope module my_stream $end
$upscope $end
$scope begin $unm_blk_35 $end
$upscope $end
$scope begin $unm_blk_36 $end
$upscope $end
$upscope $end
$scope module queue $end
$scope begin $ivl_for_loop0 $end
$upscope $end
$upscope $end
$scope module hw4_tb $end
$scope module my_max $end
$upscope $end
$scope begin $unm_blk_4 $end
$upscope $end
$scope begin $unm_blk_5 $end
$upscope $end
$upscope $end
$scope module hw6q1_tb $end
$scope module my_divider $end
$upscope $end
$scope begin $unm_blk_12 $end
$upscope $end
$upscope $end
$scope module hw6q2_tb $end
$scope module my_fact $end
$upscope $end
$scope begin $unm_blk_19 $end
$upscope $end
$scope begin $unm_blk_20 $end
$upscope $end
$upscope $end
$scope module hw6q3tb $end
$scope module my_avg $end
$upscope $end
$scope begin $unm_blk_27 $end
$upscope $end
$scope begin $unm_blk_28 $end
$upscope $end
$upscope $end
$scope module hw6q4tb $end
$scope module my_stream $end
$upscope $end
$scope begin $unm_blk_35 $end
$upscope $end
$scope begin $unm_blk_36 $end
$upscope $end
$upscope $end
$scope module queue $end
$scope begin $ivl_for_loop0 $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 /"
b0 ."
0-"
1,"
bx +"
z*"
0)"
1("
bx '"
bz &"
z%"
b1000000000000000000 $"
b10000000000000000000 #"
b100000000000000000000 ""
b10000000000000000 !"
b100000000000000000 ~
b0 }
bx |
b0 {
bx z
bx y
bx x
bx w
0v
b0 u
b10000000000000 t
b100000000000000 s
b1000000000000000 r
b100000000000 q
b1000000000000 p
b0 o
0n
0m
0l
b0 k
b0 j
b0 i
b0 h
b0 g
b0 f
b0 e
b0 d
b0 c
b0 b
b0 a
0`
b0 _
b0 ^
0]
b0 \
0[
0Z
b100000000 Y
b1000000000 X
b10000000000 W
b100000000 V
b1000000000 U
b0 T
b0 S
0R
0Q
b1 P
bx O
b1 N
bx M
b1 L
bx K
xJ
bx I
b0 H
0G
b1 F
0E
0D
b100000 C
b1000000 B
b10000000 A
b0 @
b0 ?
b0 >
b0 =
b0 <
b0 ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
b0 4
03
b0 2
b0 1
b1000 0
b10000 /
b10 .
b100 -
bx ,
bx +
bx *
bx )
bx (
bx '
bx &
0%
bx $
bx #
bx "
bx !
$end
#5
bx u
bx {
bx }
b1 ^
b1 H
b1 4
b1 k
bx P
b1 S
b1 ?
1v
1]
1G
13
1%
#10
0v
0]
0G
03
0%
#15
b10 ^
b10 H
b10 4
b10 k
bx S
1v
1]
1G
13
1%
#20
0v
0]
0G
03
0%
#25
b11 ^
b11 H
b11 4
b11 k
1v
1]
1G
13
1%
#30
0v
0]
0G
03
0%
b0 y
b0 |
b0 x
b0 z
#35
b100 ^
b100 H
b100 4
b100 k
1v
1]
1G
13
1%
#40
0v
0]
0G
03
0%
#45
b101 ^
b101 H
b101 4
b101 k
1v
1]
1G
13
1%
#50
0v
0]
0G
03
0%
#55
b110 ^
b110 H
b110 4
b110 k
1n
1Z
1m
1v
1]
1G
13
1%
#60
0v
0]
0G
03
0%
#65
b111 ^
b111 H
b111 4
1v
1]
1G
13
1%
#70
0v
0]
0G
03
0%
#75
b1000 ^
b1000 H
b1000 4
1v
1]
1G
13
1%
#80
0v
0]
0G
03
0%
#85
b1001 ^
b1001 H
b1001 4
1v
1]
1G
13
1%
#90
0v
0]
0G
03
0%
#95
b1010 ^
b1010 H
b1010 4
1v
1]
1G
13
1%
#100
0v
0]
0G
03
0%
#105
b1011 ^
b1011 H
b1011 4
1v
1]
1G
13
1%
#110
0v
0]
0G
03
0%
#115
b1100 ^
b1100 H
b1100 4
1v
1]
1G
13
1%
#120
0v
0]
0G
03
0%
#125
b1101 ^
b1101 H
b1101 4
1v
1]
1G
13
1%
#130
0v
0]
0G
03
0%
#135
b1110 ^
b1110 H
b1110 4
1v
1]
1G
13
1%
#140
0v
0]
0G
03
0%
#145
b1111 ^
b1111 H
b1111 4
1v
1]
1G
13
1%
#150
0v
0]
0G
03
0%
#155
b10000 ^
b10000 H
b10000 4
1v
1]
1G
13
1%
#160
0v
0]
0G
03
0%
#165
b10001 ^
b10001 H
b10001 4
1v
1]
1G
13
1%
#170
0v
0]
0G
03
0%
#175
b10010 ^
b10010 H
b10010 4
1v
1]
1G
13
1%
#180
0v
0]
0G
03
0%
#185
b10011 ^
b10011 H
b10011 4
1v
1]
1G
13
1%
#190
0v
0]
0G
03
0%
#195
b10100 ^
b10100 H
b10100 4
1v
1]
1G
13
1%
#200
0v
0]
0G
03
0%
#205
b10101 ^
b10101 H
b10101 4
1v
1]
1G
13
1%
#210
0v
0]
0G
03
0%
#215
b10110 ^
b10110 H
b10110 4
1v
1]
1G
13
1%
#220
0v
0]
0G
03
0%
#225
b10111 ^
b10111 H
b10111 4
1v
1]
1G
13
1%
#230
0v
0]
0G
03
0%
#235
b11000 ^
b11000 H
b11000 4
1v
1]
1G
13
1%
#240
0v
0]
0G
03
0%
#245
b11001 ^
b11001 H
b11001 4
1v
1]
1G
13
1%
#250
0v
0]
0G
03
0%
#255
b11010 ^
b11010 H
b11010 4
1v
1]
1G
13
1%
#260
0v
0]
0G
03
0%
#265
b11011 ^
b11011 H
b11011 4
1v
1]
1G
13
1%
#270
0v
0]
0G
03
0%
#275
b11100 ^
b11100 H
b11100 4
1v
1]
1G
13
1%
#280
0v
0]
0G
03
0%
#285
b11101 ^
b11101 H
b11101 4
1v
1]
1G
13
1%
#290
0v
0]
0G
03
0%
#295
b11110 ^
b11110 H
b11110 4
1v
1]
1G
13
1%
#300
0v
0]
0G
03
0%
#305
b11111 ^
b11111 H
b11111 4
1v
1]
1G
13
1%
#310
0v
0]
0G
03
0%
#315
b100000 ^
b100000 H
b100000 4
1v
1]
1G
13
1%
#320
0v
0]
0G
03
0%
#325
b100001 ^
b100001 H
b100001 4
1v
1]
1G
13
1%
#330
0v
0]
0G
03
0%
#335
b100010 ^
b100010 H
b100010 4
1v
1]
1G
13
1%
#340
0v
0]
0G
03
0%
#345
b100011 ^
b100011 H
b100011 4
1v
1]
1G
13
1%
#350
0v
0]
0G
03
0%
#355
b100100 ^
b100100 H
b100100 4
1v
1]
1G
13
1%
#360
0v
0]
0G
03
0%
#365
b100101 ^
b100101 H
b100101 4
1v
1]
1G
13
1%
#370
0v
0]
0G
03
0%
#375
b100110 ^
b100110 H
b100110 4
1v
1]
1G
13
1%
#380
0v
0]
0G
03
0%
#385
b100111 ^
b100111 H
b100111 4
1v
1]
1G
13
1%
#390
0v
0]
0G
03
0%
#395
b101000 ^
b101000 H
b101000 4
1v
1]
1G
13
1%
#400
0v
0]
0G
03
0%
#405
b101001 ^
b101001 H
b101001 4
1v
1]
1G
13
1%
#410
0v
0]
0G
03
0%
#415
b101010 ^
b101010 H
b101010 4
1v
1]
1G
13
1%
#420
0v
0]
0G
03
0%
#425
b101011 ^
b101011 H
b101011 4
1v
1]
1G
13
1%
#430
0v
0]
0G
03
0%
#435
b101100 ^
b101100 H
b101100 4
1v
1]
1G
13
1%
#440
0v
0]
0G
03
0%
#445
b101101 ^
b101101 H
b101101 4
1v
1]
1G
13
1%
#450
0v
0]
0G
03
0%
#455
b101110 ^
b101110 H
b101110 4
1v
1]
1G
13
1%
#460
0v
0]
0G
03
0%
#465
b101111 ^
b101111 H
b101111 4
1v
1]
1G
13
1%
#470
0v
0]
0G
03
0%
#475
b110000 ^
b110000 H
b110000 4
1v
1]
1G
13
1%
#480
0v
0]
0G
03
0%
#485
b110001 ^
b110001 H
b110001 4
1v
1]
1G
13
1%
#490
0v
0]
0G
03
0%
#495
b110010 ^
b110010 H
b110010 4
1v
1]
1G
13
1%
#500
0v
0]
0G
03
0%
#505
b110011 ^
b110011 H
b110011 4
1v
1]
1G
13
1%
#510
0v
0]
0G
03
0%
#515
b110100 ^
b110100 H
b110100 4
1v
1]
1G
13
1%
#520
0v
0]
0G
03
0%
#525
b110101 ^
b110101 H
b110101 4
1v
1]
1G
13
1%
#530
0v
0]
0G
03
0%
#535
b110110 ^
b110110 H
b110110 4
1v
1]
1G
13
1%
#540
0v
0]
0G
03
0%
#545
b110111 ^
b110111 H
b110111 4
1v
1]
1G
13
1%
#550
0v
0]
0G
03
0%
#555
b111000 ^
b111000 H
b111000 4
1v
1]
1G
13
1%
#560
0v
0]
0G
03
0%
#565
b111001 ^
b111001 H
b111001 4
1v
1]
1G
13
1%
#570
0v
0]
0G
03
0%
#575
b111010 ^
b111010 H
b111010 4
1v
1]
1G
13
1%
#580
0v
0]
0G
03
0%
#585
b111011 ^
b111011 H
b111011 4
1v
1]
1G
13
1%
#590
0v
0]
0G
03
0%
#595
b111100 ^
b111100 H
b111100 4
1v
1]
1G
13
1%
#600
0v
0]
0G
03
0%
#605
b111101 ^
b111101 H
b111101 4
1v
1]
1G
13
1%
#610
0v
0]
0G
03
0%
#615
b111110 ^
b111110 H
b111110 4
1v
1]
1G
13
1%
#620
0v
0]
0G
03
0%
#625
b111111 ^
b111111 H
b111111 4
1v
1]
1G
13
1%
#630
0v
0]
0G
03
0%
#635
b1000000 ^
b1000000 H
b1000000 4
1v
1]
1G
13
1%
#640
0v
0]
0G
03
0%
